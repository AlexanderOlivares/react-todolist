{"version":3,"sources":["theme.js","components/ToDo.js","components/ToDoList.js","components/ToDoForm.js","GlobalStyle.js","components/App.js","index.js"],"names":["darkTheme","background","color","lightTheme","TodoStyle","styled","div","props","theme","isChecked","StyledInput","input","ToDo","id","task","complete","toggleChecked","type","checked","onChange","style","padding","TodDList","list","updatedList","map","item","uuidv4","ToDoForm","addTask","useState","setInput","onSubmit","e","preventDefault","fontSize","borderRadius","value","currentTarget","placeholder","margin","GlobalStyle","createGlobalStyle","LOCAL_STORAGE_KEY","StyledHeader","h1","App","setList","setTheme","useEffect","storedList","JSON","parse","localStorage","getItem","setItem","stringify","listCopy","marginBottom","onClick","keepUnchecked","filter","marginTop","findChecked","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b65b030.chunk.js","sourcesContent":["export const darkTheme = {\n  background: \"#1e212d\",\n  color: \"#f8f1f1\",\n};\n\nexport const lightTheme = {\n  background: \"#f8f1f1\",\n  color: \"black\",\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lightTheme } from \"../theme\";\n\nconst TodoStyle = styled.div`\n  border: ${props =>\n    props.theme === lightTheme ? \"2px solid #5eaaa8\" : \"2px solid #c1a1d3\"};\n  font-size: large;\n  background-color: ${props =>\n    props.isChecked\n      ? \"#5eaaa8\"\n      : props.theme === lightTheme && !props.isChecked\n      ? \"#c1a1d3\"\n      : \"#1d3e53\"};\n  padding: 5px;\n  border-radius: 25px;\n  margin: 0 auto;\n  margin-top: 15px;\n  max-width: 80%;\n  text-align: center;\n  overflow: scroll;\n  opacity: 90%;\n  &:hover {\n    background-color: #a3d2ca;\n    color: black;\n  }\n  @media screen and (min-width: 480px) {\n    max-width: 80%;\n  }\n  @media screen and (min-width: 1024px) {\n    max-width: 45%;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 25%;\n  }\n`;\n\nconst StyledInput = styled.input`\n  float: left;\n  margin-left: 25px;\n  margin-top: 8px;\n`;\n\nexport default function ToDo({ id, task, complete, toggleChecked, theme }) {\n  function handleChange() {\n    toggleChecked(id);\n  }\n\n  return (\n    <TodoStyle theme={theme} isChecked={complete}>\n      <label>\n        <StyledInput\n          type=\"checkbox\"\n          checked={complete}\n          onChange={handleChange}\n        />\n        <div style={{ padding: 5 }}>{task}</div>\n      </label>\n    </TodoStyle>\n  );\n}\n","import React from \"react\";\nimport ToDo from \"./ToDo\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function TodDList({ theme, list, toggleChecked }) {\n  const updatedList = list.map(item => {\n    return (\n      <ToDo\n        theme={theme}\n        key={uuidv4()}\n        list={list}\n        toggleChecked={toggleChecked}\n        id={item.id}\n        task={item.task}\n        complete={item.complete}\n      />\n    );\n  });\n\n  return <div>{updatedList}</div>;\n}\n","import React, { useState } from \"react\";\n\nexport default function ToDoForm({ addTask }) {\n  const [input, setInput] = useState(\"\");\n\n  function handleChange(e) {\n    setInput(e.currentTarget.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (input === \"\") {\n      return;\n    }\n    addTask(input);\n    setInput(\"\");\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          style={{\n            fontSize: \"medium\",\n            borderRadius: 5,\n            padding: 5,\n          }}\n          value={input}\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"enter task\"\n        ></input>\n        <button style={{ fontSize: \"medium\", margin: 5, padding: 5 }}>\n          add\n        </button>\n      </form>\n    </>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    box-sizing: border-box;\n    margin: 0;\n    overflow: scroll;\n    padding: 0px;\n    height: 100%;\n    font-size: small;\n    font-family: \"Spartan\", sans-serif;\n    text-align: center;\n    background: ${props => props.theme.background};\n    color: ${props => props.theme.color};\n  }\n\n  button {\n    background: ${props =>\n      props.theme.background === \"#1e212d\" ? \"#c1a1d3\" : \"#f8f1f1\"};\n    border: ${props =>\n      props.theme.background === \"#1e212d\"\n        ? \"2px solid #5eaaa8\"\n        : \"2px solid #c1a1d3\"};\n    color: ${props => props.theme.color};    \n    border-radius: 5px;\n    font-size: small;\n    font-family: \"Spartan\", sans-serif;\n    &:hover {\n      background-color: #a3d2ca;\n    };\n    &:active {\n      background-color: #5eaaa8;\n    }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport ToDoList from \"./ToDoList\";\nimport ToDoForm from \"./ToDoForm\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"../theme\";\nimport { GlobalStyle } from \"../GlobalStyle\";\nimport { FiSun } from \"react-icons/fi\";\nimport { HiOutlineMoon } from \"react-icons/hi\";\n\nconst LOCAL_STORAGE_KEY = \"todo-list-todos\";\n\nconst StyledHeader = styled.h1`\n  text-decoration: underline;\n  text-decoration-color: #a3d2ca;\n  color: #c1a1d3;\n`;\n\nexport default function App() {\n  const [list, setList] = useState([]);\n  const [theme, setTheme] = useState(lightTheme);\n\n  function addTask(input) {\n    let listCopy = [...list];\n    listCopy = [...listCopy, { id: uuidv4(), task: input, complete: false }];\n    setList(listCopy);\n  }\n\n  useEffect(() => {\n    const storedList = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedList) {\n      setList(storedList);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(list));\n  }, [list]);\n\n  function toggleChecked(id) {\n    let listCopy = [...list];\n    const findChecked = listCopy.find(item => item.id === id);\n    findChecked.complete = !findChecked.complete;\n    setList(listCopy);\n  }\n\n  function clearCompleted(e) {\n    let listCopy = [...list];\n    const keepUnchecked = listCopy.filter(item => !item.complete);\n    setList(keepUnchecked);\n  }\n\n  function handleThemeToggle() {\n    let updatedTheme = theme === darkTheme ? lightTheme : darkTheme;\n    setTheme(updatedTheme);\n  }\n\n  return (\n    <>\n      <GlobalStyle theme={theme} />\n      <ThemeProvider theme={theme}>\n        <StyledHeader>To Do List</StyledHeader>\n        <ToDoForm addTask={addTask} />\n        <div style={{ marginBottom: -10 }}>\n          <button\n            onClick={handleThemeToggle}\n            style={{\n              margin: 15,\n              padding: 5,\n            }}\n          >\n            {theme === lightTheme ? <HiOutlineMoon /> : <FiSun />}\n          </button>\n          <button\n            onClick={clearCompleted}\n            style={{ fontSize: \"medium\", padding: 5, marginTop: 10 }}\n          >\n            clear completed\n          </button>\n        </div>\n        <ToDoList list={list} toggleChecked={toggleChecked} theme={theme} />\n      </ThemeProvider>\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}